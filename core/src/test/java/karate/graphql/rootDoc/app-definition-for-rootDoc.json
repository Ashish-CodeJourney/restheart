{
  "_id": "test-rootDoc",
  "descriptor": {
    "name": "test-rootDoc",
    "description": "This is a GraphQL application to test the rootDoc",
    "enabled": true,
    "uri": "test-rootDoc"
  },
  "schema": "type PropertiesWrapperPartialMapping { version: Int properties: Properties } type PropertiesWrapperNoMapping { properties: Properties } type Properties { group: Group genre: String } type Author { _id: String posts(visible: Boolean): [Post] properties: Properties propertiesWrapperNoMapping: PropertiesWrapperNoMapping propertiesWrapperPartialMapping: PropertiesWrapperPartialMapping } type Group {_id: String description: String tag: String} type Post { content: String } type Query { authors: [Author] }",
  "mappings": {
    "Author": {
        "posts": {
            "db": "test-graphql",
            "collection": "authors-and-posts",
            "stages": [
                { "$match": { "_id": { "$arg": "rootDoc._id" } } },
                { "$unwind" : "$posts"  },
                { "$replaceRoot": {"newRoot": "$posts"} },
                { "$match": { "visible": { "$arg": "visible" } } }
            ]
        }
    },
    "Properties": {
        "group": {
            "db": "test-graphql",
            "collection": "groups",
            "find": { "_id": { "$arg": "rootDoc.properties.group" } }
        }
    },
    "PropertiesWrapperPartialMapping": {
        "version": "v"
    },
    "Query": {
        "authors": {
          "db": "test-graphql",
          "collection": "authors-and-posts",
          "limit": 10,
          "skip": 0,
          "sort": { "_id": 1 }
        }
      }
  }
}