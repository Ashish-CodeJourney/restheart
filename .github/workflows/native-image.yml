name: Native Image Release

on: workflow_dispatch # Manually trigger the workflow

jobs:
  build-and-upload:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            arch: "linux-amd64"
          - os: windows-latest
            arch: "windows-amd64"
          - os: macos-latest
            arch: "macos-arm64"
    runs-on: ${{ matrix.os }}
    timeout-minutes: 20
    outputs:
      ubuntu: ${{ steps.set-output.outputs.ubuntu }}
    steps:
      - uses: actions/checkout@v4

      - uses: graalvm/setup-graalvm@v1
        with:
          java-version: "21"
          distribution: "graalvm-community"
          github-token: ${{ secrets.GITHUB_TOKEN }}
          cache: "maven"
          native-image-job-reports: "true"

      - name: Build native image
        run: |
          echo "GRAALVM_HOME: $GRAALVM_HOME"
          echo "JAVA_HOME: $JAVA_HOME"
          java --version
          native-image --version
          mvn package -Pnative -DskipTests

      - name: Set Output for Ubuntu
        if: matrix.arch == 'linux-amd64'
        id: set-output
        run: echo "ubuntu=true" >> $GITHUB_ENV

      # Upload the binary artifact for linux-amd64 only
      - name: Upload Binary Artifact
        if: matrix.arch == 'linux-amd64'
        uses: actions/upload-artifact@v4
        with:
          name: restheart
          path: core/target/restheart
        
      # Upload the binary artifact for all platforms
      - name: Upload Binary to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: https://api.github.com/repos/${{ github.repository }}/releases/tags/8.1.0
          asset_path: core/target/restheart${{ matrix.os == 'windows-latest' && '.exe' || '' }}
          asset_name: restheart-${{ matrix.arch }}${{ matrix.os == 'windows-latest' && '.exe' || '' }}
          asset_content_type: application/octet-stream

  docker-publish:
    runs-on: ubuntu-latest
    needs: build-and-upload
    if: ${{ needs.build-and-upload.outputs.ubuntu == 'true' }}
    steps:
      - uses: actions/checkout@v4

      - name: Download Linux Binary Artifact
        uses: actions/download-artifact@v4
        with:
          name: restheart

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Set VERSION
        id: vars
        run: |
          echo "VERSION=$(echo ${GITHUB_REF:10})" >> $GITHUB_ENV

      - name: Build and Push multi-arch native Docker images
        uses: docker/build-push-action@v6
        with:
          context: ./core/
          file: ./core/Dockerfile.native
          platforms: |
            linux/amd64,
            linux/arm64,
            linux/ppc64le,
            linux/s390x
          push: true # push all images built
          pull: true # pull all required images before building
          tags: |
            softinstigate/restheart-native:latest,
            softinstigate/restheart-native:8,
            softinstigate/restheart-native:8.1,
            softinstigate/restheart-native:8.1.0
